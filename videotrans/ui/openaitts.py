# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'chatgpt.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PySide6 import QtCore, QtWidgets

from videotrans.configure import config


class Ui_openaittsform(object):
    def setupUi(self, openaittsform):
        openaittsform.setObjectName("openaittsform")
        openaittsform.setWindowModality(QtCore.Qt.NonModal)
        openaittsform.resize(600, 600)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(openaittsform.sizePolicy().hasHeightForWidth())
        openaittsform.setSizePolicy(sizePolicy)
        openaittsform.setMaximumSize(QtCore.QSize(600, 600))

        self.label_0 = QtWidgets.QLabel(openaittsform)
        self.label_0.setGeometry(QtCore.QRect(10, 10, 580, 35))
        self.label_0.setText(
            'OpenAI官方接口无需填写' if config.defaulelang == 'zh' else 'AIs compatible with the ChatGPT also used here')

        self.label = QtWidgets.QLabel(openaittsform)
        self.label.setGeometry(QtCore.QRect(10, 45, 130, 35))
        self.label.setMinimumSize(QtCore.QSize(0, 35))
        self.label.setObjectName("label")
        self.openaitts_api = QtWidgets.QLineEdit(openaittsform)
        self.openaitts_api.setGeometry(QtCore.QRect(150, 45, 431, 35))
        self.openaitts_api.setMinimumSize(QtCore.QSize(0, 35))
        self.openaitts_api.setObjectName("openaitts_api")

        self.label_2 = QtWidgets.QLabel(openaittsform)
        self.label_2.setGeometry(QtCore.QRect(10, 95, 130, 35))
        self.label_2.setMinimumSize(QtCore.QSize(0, 35))
        self.label_2.setSizeIncrement(QtCore.QSize(0, 35))
        self.label_2.setObjectName("label_2")
        self.openaitts_key = QtWidgets.QLineEdit(openaittsform)
        self.openaitts_key.setGeometry(QtCore.QRect(150, 95, 431, 35))
        self.openaitts_key.setMinimumSize(QtCore.QSize(0, 35))
        self.openaitts_key.setObjectName("openaitts_key")

        self.label_3 = QtWidgets.QLabel(openaittsform)
        self.label_3.setGeometry(QtCore.QRect(10, 150, 121, 16))
        self.label_3.setObjectName("label_3")
        self.openaitts_model = QtWidgets.QComboBox(openaittsform)
        self.openaitts_model.setGeometry(QtCore.QRect(150, 145, 431, 35))
        self.openaitts_model.setMinimumSize(QtCore.QSize(0, 35))
        self.openaitts_model.setObjectName("openaitts_model")

        self.label_allmodels = QtWidgets.QLabel(openaittsform)
        self.label_allmodels.setGeometry(QtCore.QRect(10, 180, 571, 21))
        self.label_allmodels.setObjectName("label_allmodels")
        self.label_allmodels.setText(
            '填写所有可用模型，以英文逗号分隔，填写后可在上方选择' if config.defaulelang == 'zh' else 'Fill in all available models, separated by commas. After filling in, you can select them above')

        self.edit_allmodels = QtWidgets.QPlainTextEdit(openaittsform)
        self.edit_allmodels.setGeometry(QtCore.QRect(10, 210, 571, 100))
        self.edit_allmodels.setObjectName("edit_allmodels")

        self.set_openaitts = QtWidgets.QPushButton(openaittsform)
        self.set_openaitts.setGeometry(QtCore.QRect(10, 370, 93, 35))
        self.set_openaitts.setMinimumSize(QtCore.QSize(0, 35))
        self.set_openaitts.setObjectName("set_openaitts")

        self.test_openaitts = QtWidgets.QPushButton(openaittsform)
        self.test_openaitts.setGeometry(QtCore.QRect(130, 375, 93, 30))
        self.test_openaitts.setMinimumSize(QtCore.QSize(0, 30))
        self.test_openaitts.setObjectName("test_openaitts")

        self.retranslateUi(openaittsform)
        QtCore.QMetaObject.connectSlotsByName(openaittsform)

    def retranslateUi(self, openaittsform):
        openaittsform.setWindowTitle("OpenAI API TTS")
        self.label_3.setText('选择模型' if config.defaulelang == 'zh' else "Model")
        self.set_openaitts.setText('保存' if config.defaulelang == 'zh' else "Save")
        self.test_openaitts.setText('测试..' if config.defaulelang == 'zh' else "Test..")
        self.openaitts_api.setPlaceholderText(
            '若使用OpenAI官方接口，无需填写;第三方api在此填写' if config.defaulelang == 'zh' else 'If using the official OpenAI interface, there is no need to fill it out; Fill in the third-party API here')
        self.openaitts_api.setToolTip(
            '若使用OpenAI官方接口，无需填写;第三方api在此填写' if config.defaulelang == 'zh' else 'If using the official OpenAI interface, there is no need to fill it out; Fill in the third-party API here')
        self.openaitts_key.setPlaceholderText("Secret key")
        self.openaitts_key.setToolTip(
            "必须是付费账号，免费账号频率受限无法使用" if config.defaulelang == 'zh' else 'Must be a paid account, free account frequency is limited and cannot be used')
        self.label.setText("API URL")
        self.label_2.setText("SK")
