# run again.  Do not edit this file unless you know what you are doing.


from PySide6 import QtCore, QtWidgets
from PySide6.QtWidgets import QPlainTextEdit

from videotrans.configure import config


class Ui_sttform(object):
    def setupUi(self, sttform):
        self.has_done = False
        sttform.setObjectName("sttform")
        sttform.setWindowModality(QtCore.Qt.NonModal)
        sttform.resize(500, 400)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(sttform.sizePolicy().hasHeightForWidth())
        sttform.setSizePolicy(sizePolicy)
        self.gridLayout = QtWidgets.QGridLayout(sttform)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setSizeConstraint(QtWidgets.QLayout.SetMinimumSize)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")

        self.formLayout_2 = QtWidgets.QFormLayout()
        self.formLayout_2.setSizeConstraint(QtWidgets.QLayout.SetMinimumSize)
        self.formLayout_2.setFormAlignment(QtCore.Qt.AlignJustify | QtCore.Qt.AlignVCenter)
        self.formLayout_2.setObjectName("formLayout_2")
        self.label = QtWidgets.QLabel(sttform)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setMinimumSize(QtCore.QSize(100, 35))
        self.label.setAlignment(QtCore.Qt.AlignJustify | QtCore.Qt.AlignVCenter)
        self.label.setObjectName("label")

        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label)
        self.stt_url = QtWidgets.QLineEdit(sttform)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.stt_url.sizePolicy().hasHeightForWidth())
        self.stt_url.setSizePolicy(sizePolicy)
        self.stt_url.setMinimumSize(QtCore.QSize(210, 35))
        self.stt_url.setObjectName("stt_url")

        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.stt_url)
        self.verticalLayout.addLayout(self.formLayout_2)

        # sk
        self.formLayout_3 = QtWidgets.QFormLayout()
        self.formLayout_3.setSizeConstraint(QtWidgets.QLayout.SetMinimumSize)
        self.formLayout_3.setFormAlignment(QtCore.Qt.AlignJustify | QtCore.Qt.AlignVCenter)
        self.formLayout_3.setObjectName("formLayout_3")
        self.labelkey = QtWidgets.QLabel(sttform)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.labelkey.sizePolicy().hasHeightForWidth())
        self.labelkey.setSizePolicy(sizePolicy)
        self.labelkey.setMinimumSize(QtCore.QSize(100, 35))
        self.labelkey.setAlignment(QtCore.Qt.AlignJustify | QtCore.Qt.AlignVCenter)
        self.labelkey.setObjectName("label")

        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.labelkey)
        self.stt_model = QtWidgets.QComboBox(sttform)
        self.stt_model.addItems([
            "tiny",
            "tiny.en",
            "base",
            "base.en",
            "small",
            "small.en",
            "medium",
            "medium.en",
            "large-v1",
            "large-v2",
            "large-v3",
            "distil-whisper-small.en",
            "distil-whisper-medium.en",
            "distil-whisper-large-v2",
            "distil-whisper-large-v3",
        ])
        self.stt_model.setObjectName("stt_model")

        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.stt_model)
        self.verticalLayout.addLayout(self.formLayout_3)

        self.verticalLayout_2.addLayout(self.verticalLayout)

        self.set = QtWidgets.QPushButton(sttform)
        self.set.setMinimumSize(QtCore.QSize(0, 35))
        self.set.setObjectName("set")

        self.test = QtWidgets.QPushButton(sttform)
        self.test.setMinimumSize(QtCore.QSize(0, 30))
        self.test.setObjectName("test")

        self.ask = QPlainTextEdit(sttform)
        self.ask.setMinimumSize(QtCore.QSize(0, 200))
        self.ask.setReadOnly(True)
        self.verticalLayout_2.addWidget(self.ask)

        self.layout_btn = QtWidgets.QHBoxLayout()
        self.layout_btn.setObjectName("layout_btn")

        self.layout_btn.addWidget(self.set)
        self.layout_btn.addWidget(self.test)

        self.verticalLayout_2.addLayout(self.layout_btn)
        self.gridLayout.addLayout(self.verticalLayout_2, 0, 0, 1, 1)

        self.retranslateUi(sttform)
        QtCore.QMetaObject.connectSlotsByName(sttform)

    def retranslateUi(self, sttform):
        sttform.setWindowTitle("stt语音识别API" if config.defaulelang == 'zh' else 'stt Speech Recognition API')

        self.label.setText('API' if config.defaulelang == 'zh' else 'API')
        self.labelkey.setText('选择使用的模型' if config.defaulelang == 'zh' else 'Select model')
        tips = """该项目地址 https://github.com/jianchang512/stt
请求发送：以二进制形式发送键名为 file 的wav格式音频数据，采样率为16k、通道为1

requests.post(api_url, files={"file": open(audio_file, 'rb')},data={language:2位语言代码,model:模型名})

失败时返回
res={
    "code":1,
    "msg":"错误原因"
}

成功时返回
res={
    "code":0,
    "data":srt格式字符串
}
        """
        if config.defaulelang != 'zh':
            tips = '''The project url is https://github.com/jianchang512/stt
Request send: send audio data in wav format with key name file in binary form, sample rate 16k, channel 1
requests.post(api_url, files={“file”: open(audio_file, 'rb')},data={language:2-bit language code,model:model name})

Return on failure
res={
    “code":1,
    “msg": ”Reason for error”
}

Returns on success
res={
    “code":0,
    “data":srt format string
}'''
        self.ask.setPlainText(tips)
        self.stt_url.setPlaceholderText('http api')
        self.set.setText('保存' if config.defaulelang == 'zh' else 'Save')
        self.test.setText('测试连通性' if config.defaulelang == 'zh' else 'Test')
