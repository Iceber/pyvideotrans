# run again.  Do not edit this file unless you know what you are doing.
from pathlib import Path

from PySide6 import QtCore, QtWidgets
from PySide6.QtCore import Qt


from videotrans.configure.config import tr
from videotrans.util import tools


class Ui_geminiform(object):
    def setupUi(self, geminiform):
        self.has_done = False
        geminiform.setObjectName("geminiform")
        geminiform.setWindowModality(QtCore.Qt.NonModal)
        geminiform.resize(600, 550)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(geminiform.sizePolicy().hasHeightForWidth())
        geminiform.setSizePolicy(sizePolicy)
        geminiform.setMaximumSize(QtCore.QSize(600, 500))

        v1 = QtWidgets.QVBoxLayout(geminiform)

        h1 = QtWidgets.QHBoxLayout()
        self.label_2 = QtWidgets.QLabel()
        self.label_2.setMinimumSize(QtCore.QSize(0, 35))
        self.label_2.setSizeIncrement(QtCore.QSize(0, 35))
        self.label_2.setObjectName("label_2")
        self.gemini_key = QtWidgets.QLineEdit()
        self.gemini_key.setMinimumSize(QtCore.QSize(0, 35))
        self.gemini_key.setObjectName("gemini_key")
        h1.addWidget(self.label_2)
        h1.addWidget(self.gemini_key)
        v1.addLayout(h1)

        h2 = QtWidgets.QHBoxLayout()
        self.label_3 = QtWidgets.QLabel()
        self.label_3.setObjectName("label_3")
        self.model = QtWidgets.QComboBox()
        self.model.setMinimumSize(QtCore.QSize(0, 35))
        self.model.setObjectName("model")
        h2.addWidget(self.label_3)
        h2.addWidget(self.model)
        v1.addLayout(h2)
        
        
        h_token=QtWidgets.QHBoxLayout()
        label_token = QtWidgets.QLabel()
        label_token.setObjectName("label_token")
        label_token.setText('Max Token')
        self.gemini_maxtoken = QtWidgets.QLineEdit()
        self.gemini_maxtoken.setObjectName("gemini_maxtoken")
        h_token.addWidget(label_token)
        h_token.addWidget(self.gemini_maxtoken)
        v1.addLayout(h_token)
        

        self.label_allmodels = QtWidgets.QLabel()
        self.label_allmodels.setObjectName("label_allmodels")
        self.label_allmodels.setText(
            tr("Fill in all available models, separated by commas. After filling in, you can select them above"))
        self.label_allmodels.setStyleSheet("color:#999")

        self.edit_allmodels = QtWidgets.QPlainTextEdit()
        self.edit_allmodels.setObjectName("edit_allmodels")
        v1.addWidget(self.label_allmodels)
        v1.addWidget(self.edit_allmodels)

        self.label_4 = QtWidgets.QLabel()
        self.label_4.setObjectName("label_4")
        self.gemini_template = QtWidgets.QPlainTextEdit()
        self.gemini_template.setObjectName("gemini_template")
        self.gemini_template.setReadOnly(True)
        v1.addWidget(self.label_4)
        v1.addWidget(self.gemini_template)

        self.label_srt = QtWidgets.QLabel()
        self.label_srt.setObjectName("label_srt")

        hrecogn = QtWidgets.QHBoxLayout()
        hrecogn.addWidget(self.label_srt)

        v1.addLayout(hrecogn)

        self.gemini_srtprompt = QtWidgets.QPlainTextEdit()
        self.gemini_srtprompt.setObjectName("gemini_srtprompt")

        v1.addWidget(self.gemini_srtprompt)

        h2ttsmodel = QtWidgets.QHBoxLayout()
        self.label_ttsmodel = QtWidgets.QLabel()
        self.label_ttsmodel.setObjectName("label_ttsmodel")
        self.label_ttsmodel.setText('TTS model')

        self.ttsmodel = QtWidgets.QComboBox()
        self.ttsmodel.setMinimumSize(QtCore.QSize(0, 35))
        self.ttsmodel.setObjectName("ttsmodel")
        self.ttsmodel.addItems(["gemini-2.5-flash-preview-tts", "gemini-2.5-pro-preview-tts"])
        h2ttsmodel.addWidget(self.label_ttsmodel)
        h2ttsmodel.addWidget(self.ttsmodel)
        v1.addLayout(h2ttsmodel)

        h3 = QtWidgets.QHBoxLayout()
        self.set_gemini = QtWidgets.QPushButton()
        self.set_gemini.setMinimumSize(QtCore.QSize(0, 35))
        self.set_gemini.setObjectName("set_gemini")

        self.test = QtWidgets.QPushButton()
        self.test.setObjectName("test")

        help_btn = QtWidgets.QPushButton()
        help_btn.setMinimumSize(QtCore.QSize(0, 35))
        help_btn.setStyleSheet("background-color: rgba(255, 255, 255,0)")
        help_btn.setObjectName("help_btn")
        help_btn.setCursor(Qt.PointingHandCursor)
        help_btn.setText(tr("Fill out the tutorial"))
        help_btn.clicked.connect(lambda: tools.open_url(url='https://pyvideotrans.com/gemini'))

        h3.addWidget(self.set_gemini)
        h3.addWidget(self.test)
        h3.addWidget(help_btn)
        v1.addLayout(h3)
        self.gemini_template.setPlainText(tr("Prompt: Please open the {} file directly to modify it", 'gemini'))
        geminiform.setWindowTitle("Gemini AI")
        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(geminiform)


    def update_ui(self):
        from videotrans.configure import config
        config.settings = config.parse_init()
        allmodels_str = config.settings.get('gemini_model','')
        allmodels = str(config.settings.get('gemini_model','')).split(',')
        self.model.clear()
        self.model.addItems(allmodels)
        self.edit_allmodels.setPlainText(allmodels_str)
        self.gemini_key.setText(config.params.get("gemini_key",''))
        self.model.setCurrentText(config.params.get("gemini_model",''))
        
        self.gemini_maxtoken.setText(str(config.params.get("gemini_maxtoken",'18192')))

        self.ttsmodel.setCurrentText(config.params.get("gemini_ttsmodel",''))
        self.gemini_srtprompt.setPlainText(Path(config.ROOT_DIR+'/videotrans/prompts/recogn/gemini_recogn.txt').read_text(encoding='utf-8'))
    def retranslateUi(self):
        
        self.gemini_template.setPlaceholderText("prompt")
        self.label_4.setText(
            tr("{lang} represents the target language name, do not delete it."))
        self.label_4.setStyleSheet("color: #999;")
        self.set_gemini.setText(tr("Save"))
        self.test.setText(tr("Test"))
        self.gemini_key.setPlaceholderText("secret key")
        self.label_2.setText("Gemini  Key ")
        self.label_srt.setText(
            tr("Prompt for subtitles when converting audio to video"))
        self.label_srt.setStyleSheet("color: #999;")
        self.label_3.setText(tr("Select model"))
