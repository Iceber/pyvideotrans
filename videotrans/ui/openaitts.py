# run again.  Do not edit this file unless you know what you are doing.


from PySide6 import QtCore, QtWidgets
from PySide6.QtCore import Qt

from videotrans.configure.config import tr
from videotrans.util import tools


class Ui_openaittsform(object):
    def setupUi(self, openaittsform):
        self.has_done = False
        openaittsform.setObjectName("openaittsform")
        openaittsform.setWindowModality(QtCore.Qt.NonModal)
        openaittsform.resize(600, 600)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(openaittsform.sizePolicy().hasHeightForWidth())
        openaittsform.setSizePolicy(sizePolicy)
        openaittsform.setMaximumSize(QtCore.QSize(600, 600))

        v1 = QtWidgets.QVBoxLayout(openaittsform)

        self.label_0 = QtWidgets.QLabel(openaittsform)
        self.label_0.setGeometry(QtCore.QRect(10, 10, 580, 35))
        self.label_0.setText(
            tr("AIs compatible with the ChatGPT also used here"))
        v1.addWidget(self.label_0)

        h1 = QtWidgets.QHBoxLayout()
        self.label = QtWidgets.QLabel(openaittsform)
        self.label.setMinimumSize(QtCore.QSize(0, 35))
        self.label.setObjectName("label")
        self.openaitts_api = QtWidgets.QLineEdit(openaittsform)
        self.openaitts_api.setMinimumSize(QtCore.QSize(0, 35))
        self.openaitts_api.setObjectName("openaitts_api")
        h1.addWidget(self.label)
        h1.addWidget(self.openaitts_api)
        v1.addLayout(h1)

        h2 = QtWidgets.QHBoxLayout()
        self.label_2 = QtWidgets.QLabel(openaittsform)
        self.label_2.setMinimumSize(QtCore.QSize(0, 35))
        self.label_2.setSizeIncrement(QtCore.QSize(0, 35))
        self.label_2.setObjectName("label_2")
        self.openaitts_key = QtWidgets.QLineEdit(openaittsform)
        self.openaitts_key.setMinimumSize(QtCore.QSize(0, 35))
        self.openaitts_key.setObjectName("openaitts_key")
        h2.addWidget(self.label_2)
        h2.addWidget(self.openaitts_key)
        v1.addLayout(h2)

        h3 = QtWidgets.QHBoxLayout()
        self.label_3 = QtWidgets.QLabel(openaittsform)
        self.label_3.setObjectName("label_3")
        self.openaitts_model = QtWidgets.QComboBox(openaittsform)
        self.openaitts_model.setMinimumSize(QtCore.QSize(0, 35))
        self.openaitts_model.setObjectName("openaitts_model")
        h3.addWidget(self.label_3)
        h3.addWidget(self.openaitts_model)

        hintru = QtWidgets.QHBoxLayout()
        label_intru = QtWidgets.QLabel(openaittsform)
        label_intru.setObjectName("label_intru")
        label_intru.setText(
            tr("voice with instructions(gpt-4o-mini-tts)"))
        self.openaitts_instructions = QtWidgets.QLineEdit(openaittsform)
        self.openaitts_instructions.setMinimumSize(QtCore.QSize(0, 35))
        self.openaitts_instructions.setObjectName("openaitts_instructions")
        hintru.addWidget(label_intru)
        hintru.addWidget(self.openaitts_instructions)

        v1.addLayout(h3)
        v1.addLayout(hintru)

        self.label_allmodels = QtWidgets.QLabel(openaittsform)

        self.label_allmodels.setObjectName("label_allmodels")
        self.label_allmodels.setText(
            tr("Fill in all available models, separated by commas. After filling in, you can select them above"))
        v1.addWidget(self.label_allmodels)
        self.edit_allmodels = QtWidgets.QPlainTextEdit(openaittsform)
        self.edit_allmodels.setMinimumHeight(40)
        self.edit_allmodels.setObjectName("edit_allmodels")
        v1.addWidget(self.edit_allmodels)

        v1.addWidget(QtWidgets.QLabel(tr("Role list")))
        self.edit_roles = QtWidgets.QPlainTextEdit(openaittsform)
        self.edit_roles.setMinimumHeight(40)
        self.edit_roles.setObjectName("edit_roles")
        v1.addWidget(self.edit_roles)

        h4 = QtWidgets.QHBoxLayout()

        self.set_openaitts = QtWidgets.QPushButton(openaittsform)
        self.set_openaitts.setMinimumSize(QtCore.QSize(0, 35))
        self.set_openaitts.setObjectName("set_openaitts")

        self.test_openaitts = QtWidgets.QPushButton(openaittsform)
        self.test_openaitts.setMinimumSize(QtCore.QSize(0, 30))
        self.test_openaitts.setObjectName("test_openaitts")

        help_btn = QtWidgets.QPushButton()
        help_btn.setMinimumSize(QtCore.QSize(0, 35))
        help_btn.setStyleSheet("background-color: rgba(255, 255, 255,0)")
        help_btn.setObjectName("help_btn")
        help_btn.setCursor(Qt.PointingHandCursor)
        help_btn.setText(tr("Fill out the tutorial"))
        help_btn.clicked.connect(lambda: tools.open_url(url='https://pyvideotrans.com/openaitts'))

        h4.addWidget(self.set_openaitts)
        h4.addWidget(self.test_openaitts)
        h4.addWidget(help_btn)
        v1.addLayout(h4)

        self.retranslateUi(openaittsform)
        QtCore.QMetaObject.connectSlotsByName(openaittsform)

    def update_ui(self):
        from videotrans.configure import config
        config.settings = config.parse_init()
        allmodels_str = config.settings.get('openaitts_model','')
        allmodels = config.settings.get('openaitts_model','').split(',')

        self.openaitts_model.clear()
        self.openaitts_model.addItems(allmodels)
        self.edit_allmodels.setPlainText(allmodels_str)
        self.edit_roles.setPlainText(config.params.get('openaitts_role',''))

        if config.params.get("openaitts_key",''):
            self.openaitts_key.setText(config.params.get("openaitts_key",''))
        if config.params.get("openaitts_instructions",''):
            self.openaitts_instructions.setText(config.params.get("openaitts_instructions", ''))
        if config.params.get("openaitts_api",''):
            self.openaitts_api.setText(config.params.get("openaitts_api",''))
        if config.params.get("openaitts_model",'') and config.params.get('openaitts_model','') in allmodels:
            self.openaitts_model.setCurrentText(config.params.get("openaitts_model",''))
    def retranslateUi(self, openaittsform):
        openaittsform.setWindowTitle("OpenAI API TTS")
        self.label_3.setText(tr("Model"))
        self.set_openaitts.setText(tr("Save"))
        self.test_openaitts.setText(tr("Test"))
        self.openaitts_api.setPlaceholderText(
            tr("If using the official OpenAI interface, there is no need to fill it out; Fill in the third-party API here"))
        self.openaitts_api.setToolTip(
            tr("If using the official OpenAI interface, there is no need to fill it out; Fill in the third-party API here"))
        self.openaitts_key.setPlaceholderText("Secret key")
        self.openaitts_key.setToolTip(
            tr("Must be a paid account, free account frequency is limited and cannot be used"))
        self.label.setText(tr("API URL"))
        self.label_2.setText(tr("SK"))
