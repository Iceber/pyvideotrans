# run again.  Do not edit this file unless you know what you are doing.
from PySide6 import QtWidgets, QtCore
from PySide6.QtCore import QMetaObject, QRect, QSize, Qt
from PySide6.QtWidgets import QLabel, QLineEdit, QPlainTextEdit, QPushButton, QSizePolicy

from videotrans.configure import config
from videotrans.configure.config import tr
from videotrans.util import tools


class Ui_f5ttsform(object):
    def setupUi(self, f5ttsform):
        self.has_done = False
        if not f5ttsform.objectName():
            f5ttsform.setObjectName("f5ttsform")
        f5ttsform.setWindowModality(Qt.NonModal)
        f5ttsform.resize(600, 500)
        sizePolicy = QSizePolicy(QSizePolicy.Fixed, QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(f5ttsform.sizePolicy().hasHeightForWidth())
        f5ttsform.setSizePolicy(sizePolicy)
        f5ttsform.setMaximumSize(QSize(600, 500))

        v1 = QtWidgets.QVBoxLayout(f5ttsform)
        label0 = QLabel()
        label0.setText(tr("Please make sure the selected TTS type matches the corresponding URL"))
        v1.addWidget(label0)
        self.ttstype = QtWidgets.QComboBox(f5ttsform)
        self.ttstype.setMinimumSize(QtCore.QSize(100, 30))
        self.ttstype.addItems(config.F5_TTS_WINFORM_NAMES)
        self.ttstype.setToolTip(tr('Select the TTS service to use, support the official webui service of {}',config.F5_TTS_WINFORM_NAMES))

        self.label = QLabel(f5ttsform)
        self.label.setObjectName("label")
        self.label.setMinimumSize(QSize(0, 35))

        self.api_url = QLineEdit(f5ttsform)
        self.api_url.setObjectName("api_url")
        self.api_url.setMinimumSize(QSize(0, 35))
        h1 = QtWidgets.QHBoxLayout()
        h1.addWidget(self.ttstype)
        h1.addWidget(self.label)
        h1.addWidget(self.api_url)

        htips = QtWidgets.QHBoxLayout()
        self.is_whisper = QtWidgets.QCheckBox()
        self.is_whisper.setText(tr("Re-recognize for F5-TTS?"))
        self.is_whisper.setToolTip(tr("If selected, F5-TTS will re-use Whisper-v3 for the reference audio, which is slower."))
        self.index_tts_version = QtWidgets.QComboBox()
        self.index_tts_version.addItems([' V1 ',' V2 '])
        self.index_tts_version.setToolTip(tr("When using Index-TTS, select v1 or v2."))
        self.index_tts_version.setStyleSheet("""margin-right:15px""")
        indexttsversion=QtWidgets.QLabel(tr("IndexTTS version?"))

        htips.addWidget(indexttsversion)
        htips.addWidget(self.index_tts_version)
        htips.addWidget(self.is_whisper)
        htips.addStretch()


        v1.addLayout(h1)
        v1.addLayout(htips)

        self.label_4 = QLabel(f5ttsform)
        self.label_4.setObjectName("label_4")
        self.label_4.setText(tr("Reference Audio#Audio Text"))
        v1.addWidget(self.label_4)
        self.req = QLabel(f5ttsform)
        self.req.setText(
            tr("Reference audio needs to be in wav format, with a duration of no more than 10 seconds, and stored in the /f5-tts directory of this software"))
        self.req.setStyleSheet('color:#999')
        v1.addWidget(self.req)

        self.role = QPlainTextEdit(f5ttsform)
        self.role.setObjectName("role")
        self.role.setMinimumHeight(100)
        self.role.setReadOnly(False)
        v1.addWidget(self.role)

        self.tips = QPlainTextEdit(f5ttsform)
        self.tips.setObjectName("tips")
        self.tips.setFixedHeight(80)
        self.tips.setStyleSheet("border:0")
        self.tips.setReadOnly(True)
        v1.addWidget(self.tips)

        h2 = QtWidgets.QHBoxLayout()

        self.save = QPushButton(f5ttsform)
        self.save.setObjectName("save")
        self.save.setGeometry(QRect(10, 450, 93, 35))
        self.save.setMinimumSize(QSize(0, 35))

        self.test = QPushButton(f5ttsform)
        self.test.setObjectName("test")
        self.test.setGeometry(QRect(490, 450, 93, 35))
        self.test.setMinimumSize(QSize(0, 35))

        help_btn = QtWidgets.QPushButton()
        help_btn.setMinimumSize(QtCore.QSize(0, 35))
        help_btn.setStyleSheet("background-color: rgba(255, 255, 255,0)")
        help_btn.setObjectName("help_btn")
        help_btn.setCursor(Qt.PointingHandCursor)
        help_btn.setText(tr("Fill out the tutorial"))
        help_btn.clicked.connect(lambda: tools.open_url(url='https://pyvideotrans.com/f5tts'))


        h2.addWidget(self.save)
        h2.addWidget(self.test)
        h2.addWidget(help_btn)
        v1.addLayout(h2)

        self.retranslateUi(f5ttsform)

        QMetaObject.connectSlotsByName(f5ttsform)

    # setupUi

    def retranslateUi(self, f5ttsform):
        tips = tr("Starting from version 3.68 of this software, only the official webui is supported (F5-TTS/Spart-TTS/index-TTS/Dia-TTS/VoxCPM), and third-party integration packages and APIs are no longer supported.")

        f5ttsform.setWindowTitle("F5-TTS/Spart-TTS/index-TTS/Dia-TTS")
        self.role.setPlaceholderText(
            tr("Fill in the reference audio information, format as follows,For example: One line per group,123.wav#Hello, my friend"))
        self.tips.setPlainText(tips)
        self.save.setText(tr("Save"))
        self.api_url.setPlaceholderText(
            tr("Fill in the http starting webui  address"))
        self.label.setText("URL")
        self.test.setText(tr("Test"))
